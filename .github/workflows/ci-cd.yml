name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: Install Dependencies
      working-directory: ./backend
      run: npm ci
    - name: Run Tests
      working-directory: ./backend
      run: npm test

  deploy-backend:
    needs: backend-tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        # Add Render deployment commands here

  deploy-frontend-web:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend-web

  build-mobile-app:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Setup Expo
      uses: expo/expo-github-action@v7
      with:
        expo-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    - name: Install Dependencies
      working-directory: ./frontend-mobile
      run: npm ci
    - name: Build Android
      working-directory: ./frontend-mobile
      run: expo build:android
    - name: Build iOS
      working-directory: ./frontend-mobile
      run: expo build:ios
